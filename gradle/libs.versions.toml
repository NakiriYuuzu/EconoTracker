[versions]
agp = "8.3.2"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.9.0"
androidx-core-ktx = "1.13.1"
androidx-espresso-core = "3.5.1"
androidx-test-junit = "1.1.5"
compose-plugin = "1.6.10-rc01"
junit = "4.13.2"
kotlin = "1.9.23"

# Compiler & plugin
ksp = "1.9.23-1.0.20"
kotlinx-serialization = "1.6.3"
kotlinx-datetime = "0.6.0-RC.2"

# ViewModel & Navigation
precompose = "1.6.0"
moleculeRuntime = "1.3.2"

# UI
kolor = "1.4.4"
windowSizeClass = "0.5.0"

# Network
ktor = "2.3.10"
ktorfit = "2.0.0-beta1"

# local
room = "2.7.0-alpha01"
sqlite = "2.5.0-alpha01"
multiplatformSettings = "1.1.1"

# Dependency Injection
koin = "3.6.0-alpha3"
koinCompose = "3.6.0-alpha3"
koinComposeMultiplatform = "1.2.0-alpha3"

# Debug & Test & Logs
kermit = "2.0.3"

[libraries]
# TEST
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }

# AndroidMain
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }

# Multiplatform
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

precompose-navigator = { module = "moe.tlaster:precompose", version.ref = "precompose" }
precompose-viewmodel = { module = "moe.tlaster:precompose-viewmodel", version.ref = "precompose" }
precompose-koin = { module = "moe.tlaster:precompose-koin", version.ref = "precompose" }
precompose-molecule = { module = "moe.tlaster:precompose-molecule", version.ref = "precompose" }
molecule-runtime = { module = "app.cash.molecule:molecule-runtime", version.ref = "moleculeRuntime" }

kolor-core = { module = "com.materialkolor:material-kolor", version.ref = "kolor" }
windowSizeClass = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version.ref = "windowSizeClass" }

ktorfit-ksp = { module = "de.jensklingenberg.ktorfit:ktorfit-ksp", version.ref = "ktorfit" }
ktorfit-lib = { module = "de.jensklingenberg.ktorfit:ktorfit-lib", version.ref = "ktorfit" }
ktorfit-flow = { module = "de.jensklingenberg.ktorfit:ktorfit-converters-flow", version.ref = "ktorfit" }
ktorfit-response = { module = "de.jensklingenberg.ktorfit:ktorfit-converters-response", version.ref = "ktorfit" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-runtime-android = { module = "androidx.room:room-runtime-android", version.ref = "room" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }

multiplatformSettings-serilization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatformSettings" }
multiplatformSettings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }
multiplatformSettings-noArg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettings" }
multiplatformSettings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatformSettings" }

koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinCompose" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinComposeMultiplatform" }

kermit-core = { module = "co.touchlab:kermit", version.ref = "kermit" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
room = { id = "androidx.room", version.ref = "room" }
ktorfit = { id = "de.jensklingenberg.ktorfit", version.ref = "ktorfit" }

[bundles]
multiplatformSettings = ["multiplatformSettings-serilization", "multiplatformSettings-coroutines", "multiplatformSettings-noArg"]
precompose = ["precompose-navigator", "precompose-viewmodel", "precompose-koin", "precompose-molecule", "molecule-runtime"]
koin-android = ["koin-android", "koin-androidx-compose"]
koin-main = ["koin-core", "koin-compose"]
ktorfit = ["ktorfit-lib", "ktorfit-flow", "ktorfit-response", "ktor-json", "ktor-serialization", "ktor-contentNegotiation"]
kotlinx = ["kotlinx-datetime", "kotlinx-serialization"]
room = ["room-runtime", "sqlite-bundled"]
